#!/bin/sh
# ----------------------------------------------------------------------------
# Maven Script for OSHI -java11 builds
#
# Wraps the maven wrapper with customizations not possible in pom.xml 
# Works around limitaiton that artifactId must be a constant
# Ensures pom uploaded has correct dependency versions
# Cleans up changes when complete

echo "Copying module descriptor to source directory..."
cp config/module-info.java oshi-core/src/main/java/module-info.java
cp config/module-info.test oshi-core/src/test/java/module-info.test

echo "Updating artifactId in POM files..."
sed -i.bak -e 's/oshi-parent/oshi-parent-java11/g' pom.xml
sed -i.bak -e 's/oshi-parent/oshi-parent-java11/g' oshi-core/pom.xml
sed -i.bak -e 's/oshi-core/oshi-core-java11/g' oshi-core/pom.xml

echo "Updating modular dependencies in POM files..."
sed -i.bak -e 's/${slf4j.version}/2.0.0-alpha6/g' oshi-core/pom.xml
sed -i.bak -e 's/>jna</>jna-jpms</g' oshi-core/pom.xml
sed -i.bak -e 's/>jna-platform</>jna-platform-jpms</g' oshi-core/pom.xml
rm pom.xml.bak
rm oshi-core/pom.xml.bak

#
# Run commands above this line when preparing for a full release
#

echo "Running maven with java11 profile and arguments: \"$@\""
echo "> ./mvnw \"$@\" -P java11"
./mvnw "$@" -P java11

echo "Cleaning up..."
rm oshi-core/src/main/java/module-info.java
rm oshi-core/src/test/java/module-info.test
sed -i.bak -e 's/oshi-parent-java11/oshi-parent/g' pom.xml 
sed -i.bak -e 's/oshi-parent-java11/oshi-parent/g' oshi-core/pom.xml
sed -i.bak -e 's/oshi-core-java11/oshi-core/g' oshi-core/pom.xml
sed -i.bak -e 's/2.0.0-alpha6/${slf4j.version}/g' oshi-core/pom.xml
sed -i.bak -e 's/jna-jpms/jna/g' oshi-core/pom.xml
sed -i.bak -e 's/jna-platform-jpms/jna-platform/g' oshi-core/pom.xml
rm pom.xml.bak
rm oshi-core/pom.xml.bak

echo "All done!"
