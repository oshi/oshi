<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="https://maven.apache.org/POM/4.0.0" xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="https://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.github.oshi</groupId>
        <artifactId>oshi-parent</artifactId>
        <version>6.1.1-SNAPSHOT</version>
    </parent>

    <artifactId>oshi-core-java11</artifactId>
    <packaging>jar</packaging>

    <name>oshi-core-java11</name>

    <scm>
        <connection>scm:git:git@github.com:oshi/oshi.git</connection>
        <developerConnection>scm:git:git@github.com:oshi/oshi.git</developerConnection>
        <tag>HEAD</tag>
        <url>https://github.com/oshi/oshi.git</url>
    </scm>

    <properties>
        <main.basedir>${project.parent.basedir}</main.basedir>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.testSource>11</maven.compiler.testSource>
        <maven.compiler.testTarget>11</maven.compiler.testTarget>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Due to critical nature of OSHI jna usage, set to dependency management to help influence usage -->
            <dependency>
                <groupId>net.java.dev.jna</groupId>
                <artifactId>jna-jpms</artifactId>
                <version>${jna.version}</version>
            </dependency>
            <dependency>
                <groupId>net.java.dev.jna</groupId>
                <artifactId>jna-platform-jpms</artifactId>
                <version>${jna.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna-jpms</artifactId>
        </dependency>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna-platform-jpms</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-source</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <overwrite>false</overwrite>
                            <outputDirectory>${basedir}/src/main/java</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../oshi-core/src/main/java</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-resource</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <overwrite>false</overwrite>
                            <outputDirectory>${basedir}/src/main/resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../oshi-core/src/main/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-test-source</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>generate-test-sources</phase>
                        <configuration>
                            <overwrite>false</overwrite>
                            <outputDirectory>${basedir}/src/test/java</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../oshi-core/src/test/java</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-test-resource</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>generate-test-resources</phase>
                        <configuration>
                            <overwrite>false</overwrite>
                            <outputDirectory>${basedir}/src/test/resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../oshi-core/src/test/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/java/oshi</directory>
                            <includes>
                                <include>**</include>
                            </includes>
                        </fileset>
                        <fileset>
                            <directory>src/main/resources</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                        </fileset>
                        <fileset>
                            <directory>src/test/java/oshi</directory>
                            <includes>
                                <include>**</include>
                            </includes>
                        </fileset>
                        <fileset>
                            <directory>src/test/resources</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
                <executions>
                    <execution>
                        <id>cleanup-copied-resources</id>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <phase>post-integration-test</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>animal-sniffer-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
