# CI on Unix OS
name: Unix CI

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '**.yml'
      - '**.yaml'

jobs:
  # Runs current branch on FreeBSD 10.0.1 in a VM
  # Cirrus CI tests 11.4, 12.3 and 13.0
  testfreebsd:
    name: Test JDK 11, freebsd
    if: github.repository_owner == 'oshi'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Test in FreeBSD
        id: test-freebsd
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          prepare: |
            pkg install -y curl
            pkg install -y openjdk11
          run: |
            ./mvnw clean test -B -Djacoco.skip=true

  # Runs on OpenBSD 7.3 x86 VM
  testopenbsd:
    runs-on: ubuntu-22.04
    name: Test JDK 11, OpenBSD vm
    steps:
      - uses: actions/checkout@v4
      - name: Test on OpenBSD
        id: test-openbsd
        uses: vmactions/openbsd-vm@v1
        with:
          usesh: false
          mem: 2048
          # note default jdk for maven is 8, but some maven plugins no longer work
          # there is no meta package like eg. "jdk-11" but we can search by branch
          prepare: |
            pkg_add curl
            pkg_add jdk%11
            pkg_add maven
          run: |
            mvn clean test -B -Djacoco.skip=true

  # Runs on Solaris 11.4 x86 VM
  testsolaris:
    name: Test JDK 11, Solaris VM
    if: github.repository_owner == 'oshi'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Test on Solaris
        id: test-solaris
        uses: vmactions/solaris-vm@v1
        with:
          run: |
            wget https://download.bell-sw.com/java/11.0.15.1+2/bellsoft-jdk11.0.15.1+2-solaris-x64-lite.tar.gz -nv
            gunzip bellsoft-jdk11.0.15.1+2-solaris-x64-lite.tar.gz
            tar xf bellsoft-jdk11.0.15.1+2-solaris-x64-lite.tar
            rm bellsoft-jdk11.0.15.1+2-solaris-x64-lite.tar
            mv jdk-11.0.15.1-lite /var/tmp
            export JAVA_HOME=/var/tmp/jdk-11.0.15.1-lite
            export PATH=$JAVA_HOME:$PATH
            ./mvnw clean test -B -Djacoco.skip=true -Dmaven.gitcommitid.skip=true

  # Runs current branch on Solaris 11.3 on SPARC
  # Retries flaky test once, possible junit-platform-maven-test issue
  testsolaris_sparc:
    name: Test JDK 11, Solaris SPARC
    concurrency: solaris_gcc211
    if: github.repository_owner == 'oshi'
    runs-on: ubuntu-latest
    steps:
    - name: Test in Solaris SPARC
      uses: appleboy/ssh-action@master
      with:
        host: gcc211.fsffrance.org
        username: oshi
        key: ${{ secrets.AIX_OSHI_KEY }}
        port: 22
        script_stop: true
        command_timeout: 25m
        script: |
          source .profile
          cd ~/git/oshi
          git checkout master
          git reset --hard HEAD~2
          git pull
          for i in {1..2}; do ./mvnw clean test -B -Djacoco.skip=true -Dlicense.skip=true && break || sleep 15; done

  # SSH into AIX server and run test on AIX 7.2
  # Configured to pull latest from oshi master branch
  # To test on a PR, log into the aix server and create a new branch
  # Retries up to 3 times due to flaky library loading in OpenJ9
  testaix:
    name: Test JDK 17, aix
    concurrency: aix_gcc119
    if: github.repository_owner == 'oshi'
    runs-on: ubuntu-latest
    steps:
    - name: Test in AIX
      uses: appleboy/ssh-action@master
      with:
        host: gcc119.fsffrance.org
        username: oshi
        key: ${{ secrets.AIX_OSHI_KEY }}
        port: 22
        script_stop: true
        command_timeout: 15m
        script: |
          rm -fR ~/.cache/JNA
          rm -fR ~/javashared*
          cd ~/git/oshi
          export JAVA_HOME=~/java/jdk-17.0.8.1+1
          export PATH=$PATH:/opt/freeware/bin
          export MAVEN_OPTS="-Xshareclasses:none"
          git checkout master
          git reset --hard HEAD~2
          git pull upstream master
          for i in {1..3}; do ./mvnw clean test -B -Djacoco.skip=true && break || sleep 15; done
