language: java

before_install:
  # Skip processing all but coverity_scan branch, allow only one job to continue. Choose a Linux one.
  - if [[ "${TRAVIS_BRANCH}" == "coverity_scan" && "$NAME" != "OpenJDK 11" ]]; then exit 0; fi

# enable to get a stack trace on failed builds
# install:
#   - ./mvnw install -DskipTests=true -Dmaven.javadoc.skip=true -B -V -X

after_success:
  # Only execute jacoco on one branch. Choose a Linux one.
  - bash <(curl -s https://codecov.io/bash)
  - if [ "$NAME" == "OpenJDK 11" ]; then
      ./mvnw clean test jacoco:report coveralls:report;
      ./mvnw clean org.jacoco:jacoco-maven-plugin:prepare-agent package sonar:sonar;
    fi

addons:
  coverity_scan:
    project:
      name: "dblock/oshi"
      description: "Build submitted via Travis CI"
    notification_email: widdis@gmail.com
    build_command_prepend: "cov-configure --comptype gcc --compiler gcc-4.8 --template"
    build_command:   "./mvnw -DskipTests=true clean compile"
    branch_pattern: coverity_scan
  sonarcloud:
    organization: "default" # the key of the open source org
  hosts:
    - oshi
  hostname: oshi

# limit to 5 total builds and 2 builds on osx
matrix:
  include:
    - os: linux
      env: 
      - NAME="OpenJDK 11"
      # COVERITY_SCAN_TOKEN
      - secure: "JuTWT2u7BWQEJGMGkVvQMIQxwxajntxqbCGYt+bJD3JQhioPVFUJoEFrLCx+jJ0qLy5usrneCDFrvRhvTh6C+95kvHypvGQ3UoeWyXS8zD+GRPUyskbuQ7P60kqqIqc+naGd3uyGddniixoAA6C/Ptmknhls4FlhDCMjW3HDS0c="
      jdk: openjdk11      
    - os: linux
      env: NAME="OpenJDK 14"
      jdk: openjdk14
    - os: osx
      env: NAME="OracleJDK 8"
      osx_image: xcode9.3
    - os: osx
      env: NAME="OpenJDK 13"
      osx_image: xcode11.3.1
    - os: linux
      env: NAME="OpenJDK 15"
      jdk: openjdk15
# bnd-maven-plugin failing on JDK15-ea
# see https://github.com/bndtools/bnd/issues/3903
  allow_failures:
    - os: linux
      env: NAME="OpenJDK 15"
      jdk: openjdk15

script:
  # Skip tests on coverity_scan branch
  - if [[ "${TRAVIS_BRANCH}" == "coverity_scan" ]]; then exit 0; fi
  - java -version
  - mvn test
